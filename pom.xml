<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>es.upm.grise</groupId>
  <artifactId>2020-EX1-FINAL</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <description>Ejemplo de examen final</description>
  
  
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<plugins>

			<!-- https://stackoverflow.com/questions/49398894/unable-to-compile-simple-java-10-java-11-project-with-maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<release>10</release>
				</configuration>
			</plugin>

			<!-- Failsafe plugin needs to be declared explicitly -->
			<!-- Surefire is declared implicitly -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Deploy the code in the server of choice -->
			<!-- See also https://stackoverflow.com/questions/28071697/is-it-possible-to-pass-a-password-in-maven-deploy-in-the-command-line -->
			<!-- See also https://stackoverflow.com/questions/41326911/maven-plugin-for-tomcat-9 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>tomcat7</server>
					<url>http://piedrafita.ls.fi.upm.es:8080/manager/text</url>
					<username>admin-script</username>
					<password>prof2018upm</password>
					<path>/${project.artifactId}</path>
					<update>true</update>
				</configuration>
			</plugin>

			<!-- Cobertura should be defined in the build lifecycle -->
			<!-- See also https://stackoverflow.com/questions/9398662/maven-cobertura-plugin-not-generating-coverage-xml/9402998#9402998 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>es/upm/grise/profundizacion2019/mavenExample/IT*.java</exclude>
							<exclude>es/upm/grise/profundizacion2019/mavenExample/*IT.java</exclude>
						</excludes>
					</instrumentation>
					<formats>
						<format>xml</format>
						<format>html</format>
					</formats>
				</configuration>

			</plugin>

			<!-- See https://www.mkyong.com/maven/maven-jacoco-code-coverage-example/ -->
			<!-- See https://stackoverflow.com/questions/36304793/jacoco-with-maven-missing-execution-data-file -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>

					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>